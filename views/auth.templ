package views

templ ResetPassword(token string) {
	@bareLayout() {
		<div class="bg-gray-100 min-h-screen flex items-center justify-center">
			<div class="max-w-sm rounded-lg shadow bg-white p-6 space-y-6 border">
				<div class="space-y-2 text-center">
					<h1 class="text-2xl font-semibold">Reset Your Password</h1>
					<p class="text-zinc-500 dark:text-zinc-400">Enter a new password. Enter a new password bellow.</p>
				</div>
				if ctx.Value("msgs") != nil {
					@RenderMessages(ctx.Value("msgs").([]map[string]string))
				}
				<form class="space-y-4" method="POST" action="/forgot-password">
					<input type="hidden" value={ token } name="token"/>
					<div class="p-6 space-y-4">
						<div class="space-y-2">
							<label class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70" for="new-password">New Password</label>
							<input required name="new_password" class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50" id="new-password" type="password"/>
						</div>
						<div class="space-y-2">
							<label class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70" for="confirm-password">
								New Password Confirmation
							</label>
							<input required name="new_password_confirmation" class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50" id="confirm-password" type="password"/>
						</div>
					</div>
					<div class="flex items-center p-6">
						<button class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-black text-white hover:bg-black/90 h-10 px-4 py-2 ml-auto" type="submit">
							Reset Password
						</button>
					</div>
				</form>
			</div>
		</div>
	}
}

templ ForgotPassword() {
	@bareLayout() {
		<div class="bg-gray-100 min-h-screen flex items-center justify-center">
			<div class="max-w-sm rounded-lg shadow bg-white p-6 space-y-6 border">
				<div class="space-y-2 text-center">
					<h1 class="text-3xl font-bold">Reset Your Password</h1>
					<p class="text-zinc-500 dark:text-zinc-400">Enter your email address below to reset your password</p>
				</div>
				if ctx.Value("msgs") != nil {
					@RenderMessages(ctx.Value("msgs").([]map[string]string))
				}
				<form class="space-y-4" method="POST" action="/forgot-password">
					<div class="space-y-2">
						<div class="space-y-2">
							<label
								class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
								for="email"
							>
								Email
							</label>
							<input
								type="text"
								class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
								id="email_or_username"
								placeholder="m@example.com"
								required
								value=""
								name="email"
							/>
						</div>
						<div class="pt-10 pb-2">
							<button type="submit" class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2 w-full bg-black text-white">
								<div class="flex items-center justify-center">Reset</div>
							</button>
						</div>
					</div>
				</form>
			</div>
		</div>
	}
}

templ Login() {
	@bareLayout() {
		<div class="bg-gray-100 min-h-screen flex items-center justify-center">
			<div class="max-w-sm rounded-lg shadow bg-white p-6 space-y-6 border">
				<div class="space-y-2 text-center">
					<h1 class="text-3xl font-bold">Login</h1>
					<p class="text-zinc-500 dark:text-zinc-400">
						By logging in, you accept our
						<a class="text-blue-500 hover:text-blue-700" href="#" rel="ugc">
							terms
						</a>
						and
						<a class="text-blue-500 hover:text-blue-700" href="#" rel="ugc">
							privacy policy
						</a>
						.
					</p>
				</div>
				if ctx.Value("msgs") != nil {
					@RenderMessages(ctx.Value("msgs").([]map[string]string))
				}
				<form class="space-y-4" method="POST" action="/login">
					<div class="space-y-2">
						<div class="space-y-2">
							<label
								class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
								for="email"
							>
								Email
							</label>
							<input
								type="text"
								class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
								id="email_or_username"
								placeholder="m@example.com"
								required
								value=""
								name="email_or_username"
							/>
						</div>
						<div class="space-y-2">
							<label
								class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
								for="password"
							>
								Password
							</label>
							<input
								type="password"
								name="password"
								value=""
								class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
								id="password"
								placeholder="example"
							/>
						</div>
						<a href="/forgot-password" class="mt-10 pb-2 hover:underline">
							Reset Password ?
						</a>
						<div class="pt-5 pb-2">
							<button type="submit" class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2 w-full bg-black text-white">
								<div class="flex items-center justify-center">
									login
								</div>
							</button>
						</div>
					</div>
					<div class="flex items-center space-x-2">
						<hr class="flex-grow border-zinc-200 dark:border-zinc-700"/>
						<span class="text-zinc-400 dark:text-zinc-300 text-sm">OR</span>
						<hr class="flex-grow border-zinc-200 dark:border-zinc-700"/>
					</div>
					<a href="/register" class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:bg-gray-100 hover:text-accent-foreground h-10 px-4 py-2 w-full ">
						<div class="flex items-center justify-center">
							Register
						</div>
					</a>
				</form>
			</div>
		</div>
	}
}

templ Register(errors map[string]string) {
	@bareLayout() {
		<div class="bg-gray-100 min-h-screen flex items-center justify-center ">
			<div class="max-w-sm rounded-lg shadow bg-white p-6 space-y-6">
				<div class="space-y-2 text-center">
					<h1 class="text-3xl font-bold">Register</h1>
					<p class="text-zinc-500 dark:text-zinc-400">
						By regsitering, you accept our
						<a class="text-blue-500 hover:text-blue-700" href="#" rel="ugc">
							terms
						</a>
						and
						<a class="text-blue-500 hover:text-blue-700" href="#" rel="ugc">
							privacy policy
						</a>
						.
					</p>
				</div>
				if ctx.Value("msgs") != nil {
					@RenderMessages(ctx.Value("msgs").([]map[string]string))
				}
				<form class="space-y-4" method="POST" action="/register">
					<div class="space-y-2">
						<div>
							<label
								class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
								for="name"
							>
								Name
							</label>
							<input
								type="text"
								class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
								id="name"
								name="name"
								value=""
								placeholder="John Doe"
							/>
							<p class="text-red-400 text-xs py-1">
								if errors["Name"] != "" {
									{ errors["Name"] }
								}
							</p>
						</div>
						<div>
							<label
								class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
								for="email"
							>
								Email
							</label>
							<input
								type="email"
								class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
								id="email"
								name="email"
								value=""
								placeholder="m@example.com"
							/>
							<p class="text-red-400 text-xs py-1">
								if errors["Email"] != "" {
									{ errors["Email"] }
								}
							</p>
						</div>
						<div>
							<label
								class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
								for="username"
							>
								Username
							</label>
							<input
								type="username"
								class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
								id="username"
								name="username"
								value=""
								placeholder="example"
							/>
							<p class="text-red-400 text-xs py-1">
								if errors["Username"] != "" {
									{ errors["Username"] }
								}
							</p>
						</div>
						<div>
							<label
								class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
								for="password"
							>
								Password
							</label>
							<input
								type="password"
								name="password"
								value=""
								class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
								id="password"
								placeholder="example"
							/>
							<p class="text-red-400 text-xs py-1">
								if errors["Password"] != "" {
									{ errors["Password"] }
								}
							</p>
						</div>
						<div>
							<label
								class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
								for="password_confirmation"
							>
								Confirm Password
							</label>
							<input
								type="password"
								name="password_confirmation"
								class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
								id="password_confirmation"
								placeholder="example"
								value=""
							/>
						</div>
						<button type="submit" class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2 w-full bg-black text-white">
							<div class="flex items-center justify-center">
								Register
							</div>
						</button>
						<a href="/login" class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-1 hover:bg-gray-100  h-10 px-4 py-2 w-full">
							<div class="flex items-center justify-center">
								Login
							</div>
						</a>
					</div>
				</form>
			</div>
		</div>
	}
}
